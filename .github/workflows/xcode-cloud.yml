# GitHub Actions iOS Build - Direct Device Installation
# Builds iOS app without App Store Connect requirement

name: Build iOS App

# Trigger build on push to main branch
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allows manual trigger

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    # Checkout repository code
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    # Set up Flutter
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.6'
        channel: 'stable'
        
    # Install Flutter dependencies first
    - name: Install Flutter Dependencies
      run: flutter pub get
      
    # Clean and regenerate Flutter iOS configuration
    - name: Clean and Regenerate Flutter iOS Config
      run: |
        flutter clean
        flutter pub get
        
    # Fix Xcode project configuration issues
    - name: Fix Widget Extension Build Configuration
      run: |
        cd ios
        
        # Fix the exact error: Multiple commands produce Info.plist
        # The widget's Info.plist should NOT be in Copy Bundle Resources phase
        # It should only be referenced in INFOPLIST_FILE build setting
        
        # Create a targeted fix script
        cat > fix_project.py << 'PYTHON_SCRIPT'
        import re
        
        # Read the project file
        with open('Runner.xcodeproj/project.pbxproj', 'r') as f:
            content = f.read()
        
        print("Fixing duplicate Info.plist issue...")
        
        # Remove the PBXBuildFile entry for widget Info.plist
        # Pattern: 4A90C9D72C8A4F80003AAA21 /* Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 4A90C9D62C8A4F80003AAA21 /* Info.plist */; };
        pattern1 = r'\s*4A90C9D72C8A4F80003AAA21 /\* Info\.plist in Resources \*/ = \{isa = PBXBuildFile; fileRef = 4A90C9D62C8A4F80003AAA21 /\* Info\.plist \*/; \};\n'
        content = re.sub(pattern1, '', content)
        
        # Remove the reference from Resources build phase
        # Pattern: 4A90C9D72C8A4F80003AAA21 /* Info.plist in Resources */,
        pattern2 = r'\s*4A90C9D72C8A4F80003AAA21 /\* Info\.plist in Resources \*/,\n'
        content = re.sub(pattern2, '', content)
        
        # Write back the fixed content
        with open('Runner.xcodeproj/project.pbxproj', 'w') as f:
            f.write(content)
        
        print("Fixed Xcode project configuration")
        print("Removed duplicate Info.plist references from Copy Bundle Resources")
        PYTHON_SCRIPT
        
        # Run the fix script
        python3 fix_project.py
        cd ..
        
    # Create missing asset files for widget
    - name: Create Missing Asset Files
      run: |
        cd ios
        
        # Create widget Assets.xcassets directory structure
        mkdir -p ProcreateHelperWidget/Assets.xcassets/AccentColor.colorset
        mkdir -p ProcreateHelperWidget/Assets.xcassets/WidgetBackground.colorset
        
        # Create Assets.xcassets Contents.json
        cat > ProcreateHelperWidget/Assets.xcassets/Contents.json << 'EOF'
        {
          "info" : {
            "author" : "xcode",
            "version" : 1
          }
        }
        EOF
        
        # Create AccentColor
        cat > ProcreateHelperWidget/Assets.xcassets/AccentColor.colorset/Contents.json << 'EOF'
        {
          "colors" : [
            {
              "idiom" : "universal",
              "color" : {
                "color-space" : "srgb",
                "components" : {
                  "red" : 0.000,
                  "green" : 0.478,
                  "blue" : 1.000,
                  "alpha" : 1.000
                }
              }
            }
          ],
          "info" : {
            "author" : "xcode",
            "version" : 1
          }
        }
        EOF
        
        # Create WidgetBackground
        cat > ProcreateHelperWidget/Assets.xcassets/WidgetBackground.colorset/Contents.json << 'EOF'
        {
          "colors" : [
            {
              "idiom" : "universal",
              "color" : {
                "color-space" : "srgb",
                "components" : {
                  "red" : 1.000,
                  "green" : 1.000,
                  "blue" : 1.000,
                  "alpha" : 1.000
                }
              }
            },
            {
              "appearances" : [
                {
                  "appearance" : "luminosity",
                  "value" : "dark"
                }
              ],
              "idiom" : "universal",
              "color" : {
                "color-space" : "srgb",
                "components" : {
                  "red" : 0.110,
                  "green" : 0.110,
                  "blue" : 0.118,
                  "alpha" : 1.000
                }
              }
            }
          ],
          "info" : {
            "author" : "xcode",
            "version" : 1
          }
        }
        EOF
        
        echo "Created widget Assets.xcassets with AccentColor and WidgetBackground"
        cd ..
        
    # Install iOS CocoaPods dependencies
    - name: Install iOS Dependencies
      run: |
        cd ios
        pod install --verbose
        cd ..
        
    # Build iOS app for simulator (no signing required)
    - name: Build iOS App for Simulator
      run: |
        flutter build ios --simulator --debug
        
    # Build iOS app for device (attempt without signing)
    - name: Build iOS App for Device (Unsigned)
      run: |
        # Try building for device, but don't fail if it doesn't work
        flutter build ios --release --no-codesign || echo "Device build failed - continuing with simulator build"
        
    # Create IPA files
    - name: Create App Packages
      run: |
        # Create simulator IPA
        if [ -d "build/ios/iphonesimulator/Runner.app" ]; then
          cd build/ios/iphonesimulator
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r ProcreateHelperWidget-Simulator.ipa Payload/
          cd ../../..
        fi
        
        # Create device IPA if device build succeeded
        if [ -d "build/ios/iphoneos/Runner.app" ]; then
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r ProcreateHelperWidget-Device.ipa Payload/
          cd ../../..
        fi
        
        # List what we created
        find build -name "*.ipa" -type f
        
    # Upload IPA files as artifacts
    - name: Upload App Packages
      uses: actions/upload-artifact@v4
      with:
        name: ProcreateHelperWidget-iOS-Apps
        path: |
          build/ios/iphonesimulator/ProcreateHelperWidget-Simulator.ipa
          build/ios/iphoneos/ProcreateHelperWidget-Device.ipa
        retention-days: 30
        if-no-files-found: ignore
        
    # Upload app bundles as backup
    - name: Upload App Bundles
      uses: actions/upload-artifact@v4
      with:
        name: ProcreateHelperWidget-App-Bundles
        path: |
          build/ios/iphonesimulator/Runner.app
          build/ios/iphoneos/Runner.app
        retention-days: 30
        if-no-files-found: ignore